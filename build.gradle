buildscript {
    ext {
        javaVersion = 1.8
        sringBootGradlePluginVersion = '2.0.5.RELEASE'
        springCloudVersion = 'Finchley.RELEASE'
        dockerGradlePluginVersion = '0.19.2'
        imageVersion = 'latest'
        dependencyManagementPluginVersion = '1.0.5.RELEASE'
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${sringBootGradlePluginVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${dockerGradlePluginVersion}")

    }

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'coon-docker'
    version = '1.0.0-RELEASE'
}

group = 'com.coon'

docker {
    name "${group}/${bootJar.baseName}:${imageVersion}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE':"${bootJar.archiveName}"])
}

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    //compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
